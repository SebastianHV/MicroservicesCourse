spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
server.port=9000

#We add these lines to connect to config server
#This is the name of the application, equal to the name of the property files
spring.application.name=cards
#This is the current active environment where we want to execute the microservice
spring.profiles.active=default
#This will tell what is the config server endpoint URL where we will get all the files
spring.config.import=optional:configserver:http://localhost:8071

management.endpoints.web.exposure.include=*

#When the mService restarts, it will do it with the IP address
eureka.instance.preferIpAddress = true 
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/

#Configuring info endpoint
#This will ve displayed when we call the info endpoint "/info" of the actuator
management.info.env.enabled=true
info.app.name=Cards Microservice
info.app.description=Eazy Bank Cards Application
info.app.version=1.0.0

#Enable endpoint that will allow to shut down gracefully the app
endpoints.shutdown.enabled=true
management.endpoint.shutdown.enabled=true

# Sleuth related properties
spring.sleuth.sampler.percentage=1
spring.zipkin.baseUrl=http://localhost:9411/

# Configuration to push the loggers into a RabbitMQ queue
#spring.zipkin.sender.type=rabbit
#spring.zipkin.rabbitmq.queue=zipkin
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest