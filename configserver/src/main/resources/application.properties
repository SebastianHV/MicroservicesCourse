spring.application.name=configserver

#This will use the current file system
#spring.profiles.active=native
#We will read the config files from a github location
spring.profiles.active=git

#If we want to read the configurations from a classpath
#spring.cloud.config.server.native.search-locations=classpath:/config
#If we want to read the configuration from a file system location
#spring.cloud.config.server.native.search-locations=file:///X://Documentos//Workspaces//Microservices//config
#If we want to read the configuration from a git repository
spring.cloud.config.server.git.uri=https://github.com/SebastianHV/microservices-config.git
#This will tell the server to clone the repo and start it up in order to read the config files
spring.cloud.config.server.git.clone-on-start=true
#This is the label of the branch where the files are being maintained
spring.cloud.config.server.git.default-label=main

server.port=8071

encrypt.key=sebastianhv

# Sleuth related properties
spring.sleuth.sampler.percentage=1
spring.zipkin.baseUrl=http://localhost:9411/

# Configuration to push the loggers into a RabbitMQ queue
#spring.zipkin.sender.type=rabbit
#spring.zipkin.rabbitmq.queue=zipkin
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest